<?php

namespace Mix\Concurrent;

use Mix\Core\BaseObject;
use Mix\Core\Channel;

/**
 * Class Worker
 * @package Mix\Concurrent
 * @author 刘健 <coder.liu@qq.com>
 */
class Worker extends BaseObject
{

    /**
     * 工作池
     * @var \Swoole\Coroutine\Channel
     */
    public $workerPool;

    /**
     * 任务通道
     * @var \Swoole\Coroutine\Channel
     */
    public $jobChannel;

    /**
     * 退出
     * @var \Swoole\Coroutine\Channel
     */
    protected $_quit;

    /**
     * 初始化事件
     */
    public function onInitialize()
    {
        parent::onInitialize(); // TODO: Change the autogenerated stub
        // 初始化
        $this->jobChannel = new Channel();
        $this->_quit      = new Channel();
    }

    /**
     * 启动
     */
    public function start()
    {
        tgo(function () {
            $chan = new Channel();
            tgo(function () use ($chan) {
                while (true) {
                    $this->workerPool->push($this->jobChannel);
                    $job = $this->jobChannel->pop();
                    if (!$job) {
                        return;
                    }
                    $chan->push(['job', $job]);
                }
            });
            tgo(function () use ($chan) {
                $data = $this->_quit->pop();
                $chan->push(['quit', $data]);
            });
            while (true) {
                list($flag, $job) = $chan->pop();
                switch ($flag) {
                    case 'job':
                        list($callback, $params) = $job;
                        call_user_func_array($callback, $params);
                        break;
                    case 'quit':
                        $this->jobChannel->close();
                        return;
                }
            }
        });
    }

    /**
     * 停止
     */
    public function stop()
    {
        tgo(function () {
            $this->_quit->push('ok');
        });
    }

}
